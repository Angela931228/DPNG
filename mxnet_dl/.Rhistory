shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnL/PnLCalculator')
help(exp)
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
source('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator/helper.R')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
input$mode<-1
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
source('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator/helper.R')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
source('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator/helper.R')
exit <- integer(0)
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
help(Reduce)
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
TEST<- [-1.8176482 -5.5467864  0.6117401]
TEST<- [-1.8176482, -5.5467864 , 0.6117401]
TEST<- (-1.8176482, -5.5467864 , 0.6117401)
TEST<- (-1.8176482 -5.5467864  0.6117401)
TEST<- -1.8176482 -5.5467864  0.6117401
TEST<- C(-1.8176482, -5.5467864,  0.6117401)
C(-1.8176482, -5.5467864,  0.6117401)
c(-1.8176482, -5.5467864,  0.6117401)
Test<- c(-1.8176482, -5.5467864,  0.6117401)
test
Test
Reduce(prod,1+Test, accumulate=TRUE)-1
Reduce(prod,1+Test, accumulate=TRUE)-1
Test2<-Reduce(prod,1+Test, accumulate=TRUE)-1
Test2<-Reduce(prod,if(Test2*Test>0) 1+Test else 1-Test, accumulate=TRUE)-1
Test2<-Reduce(prod,if(Test2*Test>0) 1+Test else 1-Test, accumulate=TRUE)-1
Test2
Test2<-Reduce(prod,if(Test2*Test>0) 1+Test else 1-Test, accumulate=TRUE)-1
Test2<-vector(,length(Test))
help(result)
help(reduce)
help(Reduce)
Test2<-vector(,length(Test))
Test2<-Reduce(prod,if(Test2[,-1]*Test>0) 1+Test else 1-Test, accumulate=TRUE)-1
Test2<-Reduce(sum, 1+Test, accumulate=TRUE)-1
Test2
Test3<-Reduce(sum, if(Test1*Test)>0 1+Test else 1-Test, accumulate=TRUE)-1
Test3<-Reduce(sum, if(Test1*Test>0) 1+Test else 1-Test, accumulate=TRUE)-1
Test3<-Reduce(sum, if(Test2*Test>0) 1+Test else 1-Test, accumulate=TRUE)-1
Test3<-Reduce(sum, if(Test2>0) 1+Test else 1-Test, accumulate=TRUE)-1
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
}
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
test3<- c(-1.817648, -1.317460)
test3
(1+tail(test3, 1))
(-1)^4
(-1)^3
(-1)^0.5
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
365/30
(-2)^12.1
round(12.3)
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
(1-0.31746)^(20)
(1-0.31746)^(20.2)
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
(1-0.31746)^(365/21)
(1-0.31746)^(365/20+1)
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
(0.31)^17.38095
(0.31)^17.38095
(0.31)^17.38095*-1
percentage((0.31)^17.38095*-1)
percent((0.31)^17.38095*-1)
(0.31)^17
(0.31)^17.38095
(0.31)^17.38095-1
(0.31)^17.38095+1
(0.31)^17.38095==0
(0.31)^17.38095-2
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/PnLCalculator')
test<-c(1,2,3,4)
Reduce(product,test,accumulate = T)
Reduce(pro,test,accumulate = T)
Reduce(prod,test,accumulate = T)
T
Reduce(prod,test*T,accumulate = T)
Reduce(prod,test*T,accumulate = T)
Reduce(prod,test*T[-1],accumulate = T)
Reduce(prod,test*T,accumulate = T)
Reduce(prod,test-T,accumulate = T)
Reduce(prod,test+T,accumulate = T)
test+T
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
getwd()
getCorrMatrix <- function(t){
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/Angela/Pairtrade')
shiny::runApp('C:/Users/angela.zhou/Desktop/asagi/pairtrade1')
shiny::runApp('C:/Users/angela.zhou/Desktop/asagi/pairtrade1')
shiny::runApp('C:/Users/angela.zhou/Desktop/asagi/pairtrade1')
shiny::runApp('C:/Users/angela.zhou/Desktop/asagi/pairtrade1')
shiny::runApp('C:/Users/angela.zhou/Desktop/asagi/pairtrade1')
shiny::runApp('C:/Users/angela.zhou/Desktop/asagi/pairtrade1')
shiny::runApp('C:/Users/angela.zhou/Desktop/asagi/pairtrade1')
shiny::runApp('C:/Users/angela.zhou/Desktop/asagi/pairtrade1')
shiny::runApp('C:/Users/angela.zhou/Desktop/asagi/pairtrade1')
shiny::runApp('C:/Users/angela.zhou/Desktop/asagi/pairtrade1')
shiny::runApp('C:/Users/angela.zhou/Desktop/asagi/pairtrade1')
shiny::runApp('C:/Users/angela.zhou/Desktop/asagi/pairtrade1')
shiny::runApp('C:/Users/angela.zhou/Desktop/asagi/pairtrade1')
shiny::runApp('C:/Users/angela.zhou/Desktop/asagi/pairtrade1')
shiny::runApp('C:/Users/angela.zhou/Desktop/asagi/pairtrade1')
shiny::runApp('C:/Users/angela.zhou/Desktop/asagi_beta/PairTrade_Beta')
shiny::runApp('C:/Users/angela.zhou/Desktop/asagi_beta/PairTrade_Beta')
var1<- c(rnorm(50,1,0.5),rnorm(50,-0.6,0.2))
var2<- c(rnorm(50,-0.8,0.2), rnorm(50,2,1))
var1<- c(rnorm(50,1,0.5),rnorm(50,-0.6,0.2))
var2<- c(rnorm(50,-0.8,0.2), rnorm(50,2,1))
x<- matrix(c(var1,var2), nrow=100, ncol=2)
y<- c(rep(1,50), rep(0,50))
dnn<- dbn.dnn.train(x,y,hidden =c(5,5))
install.packages("deepnet")
library('deepnet')
var1<- c(rnorm(50,1,0.5),rnorm(50,-0.6,0.2))
var2<- c(rnorm(50,-0.8,0.2), rnorm(50,2,1))
x<- matrix(c(var1,var2), nrow=100, ncol=2)
y<- c(rep(1,50), rep(0,50))
dnn<- dbn.dnn.train(x,y,hidden =c(5,5))
test_Var1 <- c(rnorm(50, 1, 0.5), rnorm(50, -0.6, 0.2))
test_Var2 <- c(rnorm(50, -0.8, 0.2), rnorm(50, 2, 1))
test_x <- matrix(c(test_Var1, test_Var2), nrow = 100, ncol = 2)
nn.test(dnn, test_x, y)
var1<- c(rnorm(50,1,0.5),rnorm(50,-0.6,0.2))
var2<- c(rnorm(50,-0.8,0.2), rnorm(50,2,1))
x<- matrix(c(var1,var2), nrow=100, ncol=2)
y<- c(rep(1,50), rep(0,50))
dnn<- dbn.dnn.train(x,y,hidden =c(5,5))
test_Var1 <- c(rnorm(50, 1, 0.5), rnorm(50, -0.6, 0.2))
test_Var2 <- c(rnorm(50, -0.8, 0.2), rnorm(50, 2, 1))
test_x <- matrix(c(test_Var1, test_Var2), nrow = 100, ncol = 2)
nn.test(dnn, test_x, y)
var1
var2
install.packages("darch")
library('darch')
inputs <- matrix(c(0,0,0,1,1,0,1,1),ncol=2,byrow=TRUE)
outputs <- matrix(c(0,1,1,0),nrow=4)
darch <- newDArch(c(2,4,1),batchSize=2)
darch <- preTrainDArch(darch,inputs,maxEpoch=1000)
layers <- getLayers(darch)
for(i in length(layers):1){
layers[[i]][[2]] <- sigmoidUnitDerivative
}
setLayers(darch) <- layers
rm(layers)
setFineTuneFunction(darch) <- backpropagation
darch <- fineTuneDArch(darch,inputs,outputs,maxEpoch=1000)
# Running the darch
darch <- darch <- getExecuteFunction(darch)(darch,inputs)
outputs <- getExecOutputs(darch)
cat(outputs[[length(outputs)]])
library('darch')
inputs <- matrix(c(0,0,0,1,1,0,1,1),ncol=2,byrow=TRUE)
outputs <- matrix(c(0,1,1,0),nrow=4)
darch <- newDArch(c(2,4,1),batchSize=2)
darch <- preTrainDArch(darch,inputs,maxEpoch=1000)
layers <- getLayers(darch)
for(i in length(layers):1){
layers[[i]][[2]] <- sigmoidUnitDerivative
}
setLayers(darch) <- layers
rm(layers)
setFineTuneFunction(darch) <- backpropagation
darch <- fineTuneDArch(darch,inputs,outputs,maxEpoch=1000)
# Running the darch
darch <- darch <- getExecuteFunction(darch)(darch,inputs)
outputs <- getExecOutputs(darch)
cat(outputs[[length(outputs)]])
darch <- fineTuneDArch(darch,inputs,outputs,maxEpoch=1000)
R.Version
R.Version()
library('darch')
inputs <- matrix(c(0,0,0,1,1,0,1,1),ncol=2,byrow=TRUE)
outputs <- matrix(c(0,1,1,0),nrow=4)
darch <- newDArch(c(2,4,1),batchSize=2)
darch <- preTrainDArch(darch,inputs,maxEpoch=1000)
layers <- getLayers(darch)
for(i in length(layers):1){
layers[[i]][[2]] <- sigmoidUnitDerivative
}
setLayers(darch) <- layers
rm(layers)
setFineTuneFunction(darch) <- backpropagation
darch <- fineTuneDArch(darch,inputs,outputs,maxEpoch=1000)
# Running the darch
darch <- darch <- getExecuteFunction(darch)(darch,inputs)
outputs <- getExecOutputs(darch)
cat(outputs[[length(outputs)]])
library('darch')
inputs <- matrix(c(0,0,0,1,1,0,1,1),ncol=2,byrow=TRUE)
outputs <- matrix(c(0,1,1,0),nrow=4)
darch <- newDArch(c(2,4,1),batchSize=2)
darch <- preTrainDArch(darch,inputs,maxEpoch=1000)
layers <- getLayers(darch)
for(i in length(layers):1){
layers[[i]][[2]] <- sigmoidUnitDerivative
}
setLayers(darch) <- layers
rm(layers)
setFineTuneFunction(darch) <- backpropagation
darch <- fineTuneDArch(darch,inputs,outputs,maxEpoch=1000)
# Running the darch
darch <- darch <- getExecuteFunction(darch)(darch,inputs)
outputs <- getExecOutputs(darch)
cat(outputs[[length(outputs)]])
callBlackShores<- function(S,K,t,bT, std, r){
d1<- (log(S/K, base = exp(1)) + r*(bT-t))/(std*sqrt(bT-t))+ 0.5*std*sqrt(bT-t)
d2<- (log(S/K, base = exp(1)) + r*(bT-t))/(std*sqrt(bT-t))- 0.5*std*sqrt(bT-t)
call_price = S*dnorm(d1,mean,sd=1) - dnorm(d2,mean,sd=1)*k *exp(-r*(bT-t))
return(call_price)
}
callBlackShores(100,100,0,0.5,0.2,0.01)
callBlackShores<- function(S,K,t,bT, std, r){
d1<- (log(S/K, base = exp(1)) + r*(bT-t))/(std*sqrt(bT-t))+ 0.5*std*sqrt(bT-t)
print(d1)
d2<- (log(S/K, base = exp(1)) + r*(bT-t))/(std*sqrt(bT-t))- 0.5*std*sqrt(bT-t)
call_price = S*dnorm(d1,mean,sd=1) - dnorm(d2,mean,sd=1)*k *exp(-r*(bT-t))
return(call_price)
}
callBlackShores(100,100,0,0.5,0.2,0.01)
callBlackShores<- function(S,K,t,bT, std, r){
d1<- (log(S/K, base = exp(1)) + r*(bT-t))/(std*sqrt(bT-t))+ 0.5*std*sqrt(bT-t)
print(d1)
d2<- (log(S/K, base = exp(1)) + r*(bT-t))/(std*sqrt(bT-t))- 0.5*std*sqrt(bT-t)
call_price = S*dnorm(as.numeric(d1),mean,sd=1) - dnorm(as.numeric(d2),mean,sd=1)*k *exp(-r*(bT-t))
return(call_price)
}
callBlackShores(100,100,0,0.5,0.2,0.01)
callBlackShores<- function(S,K,t,bT, std, r){
d1<- (log(S/K, base = exp(1)) + r*(bT-t))/(std*sqrt(bT-t))+ 0.5*std*sqrt(bT-t)
print(d1)
d2<- (log(S/K, base = exp(1)) + r*(bT-t))/(std*sqrt(bT-t))- 0.5*std*sqrt(bT-t)
call_price = S*dnorm(d1,mean=0,sd=1) - dnorm(d2,mean=0,sd=1)*k *exp(-r*(bT-t))
return(call_price)
}
callBlackShores(100,100,0,0.5,0.2,0.01)
callBlackShores<- function(S,K,t,bT, std, r){
d1<- (log(S/K, base = exp(1)) + r*(bT-t))/(std*sqrt(bT-t))+ 0.5*std*sqrt(bT-t)
print(d1)
d2<- (log(S/K, base = exp(1)) + r*(bT-t))/(std*sqrt(bT-t))- 0.5*std*sqrt(bT-t)
call_price = S*dnorm(d1,mean=0,sd=1) - dnorm(d2,mean=0,sd=1)*K *exp(-r*(bT-t))
return(call_price)
}
callBlackShores(100,100,0,0.5,0.2,0.01)
c(c(1,2),c(2,3))
test<- data.frame(c(1,2),c(2,3))
test
as.vector(test)
shiny::runApp('C:/Users/angela.zhou/Desktop/Asagi_4_27/PairTrade')
getwd()
setwd("C:/Users/angela.zhou/Desktop/NyMEX/mxnet_dl/")
i<-1
train.x <- data.matrix(rawdata[c((i+240):(i+440)), c(3,4,5,6,7,8,9,13,14,15,16,17,18,19,20,23,24,26,27,28,29)])
train.y <- rawdata[c((i+240):(i+440)),2]
test.x <- data.matrix(rawdata[(i+441), c(3,4,5,6,7,8,9,13,14,15,16,17,18,19,20,23,24,26,27,28,29)])
test.y <- rawdata[(i+441),2]
data <- mx.symbol.Variable("data")
fc1 <- mx.symbol.FullyConnected(data, num_hidden=64)
dp1<- mx.symbol.Dropout(fc1,name="dp1", p=0.1)
act1 <- mx.symbol.Activation(dp1, name="relu1", act_type="relu")
fc2 <- mx.symbol.FullyConnected(act1, num_hidden=32)
dp2<- mx.symbol.Dropout(fc2,name="dp2", p=0.1)
act2 <- mx.symbol.Activation(dp2, name="relu2", act_type="relu")
fc3 <- mx.symbol.FullyConnected(act2, num_hidden=1)
act3 <- mx.symbol.Activation(fc3, name="relu3", act_type="relu")
lro <- mx.symbol.LinearRegressionOutput(act3)
mx.set.seed(0)
model <- mx.model.FeedForward.create(lro, train.x, train.y,ctx = mx.cpu(), num.round=10000, array.batch.size=100,
learning.rate=0.005, momentum=0.9, eval.metric=mx.metric.rmse)
pred = predict(model, test.x)
require(mxnet)
rawdata<- read.csv("./ng_58factors.csv")
#rawdata[,2]<- as.numeric(rawdata[,2])-1
rawdata[,c(3:ncol(rawdata))]<- scale(rawdata[,c(3:ncol(rawdata))],center = TRUE, scale = TRUE)
prs<-{}
acts<-{}
train.x <- data.matrix(rawdata[c((i+240):(i+440)), c(3,4,5,6,7,8,9,13,14,15,16,17,18,19,20,23,24,26,27,28,29)])
train.y <- rawdata[c((i+240):(i+440)),2]
test.x <- data.matrix(rawdata[(i+441), c(3,4,5,6,7,8,9,13,14,15,16,17,18,19,20,23,24,26,27,28,29)])
test.y <- rawdata[(i+441),2]
data <- mx.symbol.Variable("data")
fc1 <- mx.symbol.FullyConnected(data, num_hidden=64)
dp1<- mx.symbol.Dropout(fc1,name="dp1", p=0.1)
act1 <- mx.symbol.Activation(dp1, name="relu1", act_type="relu")
fc2 <- mx.symbol.FullyConnected(act1, num_hidden=32)
dp2<- mx.symbol.Dropout(fc2,name="dp2", p=0.1)
act2 <- mx.symbol.Activation(dp2, name="relu2", act_type="relu")
fc3 <- mx.symbol.FullyConnected(act2, num_hidden=1)
act3 <- mx.symbol.Activation(fc3, name="relu3", act_type="relu")
lro <- mx.symbol.LinearRegressionOutput(act3)
mx.set.seed(0)
model <- mx.model.FeedForward.create(lro, train.x, train.y,ctx = mx.cpu(), num.round=10000, array.batch.size=100,
learning.rate=0.005, momentum=0.9, eval.metric=mx.metric.rmse)
pred = predict(model, test.x)
pred
test.y
train.x <- data.matrix(rawdata[c((i+240):(i+440)), c(3,4,5,6,7,8,9,13,14,15,16,17,18,19,20,23,24,26,27,28,29)])
train.y <- rawdata[c((i+240):(i+440)),2]
test.x <- data.matrix(rawdata[(i+441), c(3,4,5,6,7,8,9,13,14,15,16,17,18,19,20,23,24,26,27,28,29)])
test.y <- rawdata[(i+441),2]
data <- mx.symbol.Variable("data")
fc1 <- mx.symbol.FullyConnected(data, num_hidden=64)
dp1<- mx.symbol.Dropout(fc1,name="dp1", p=0.1)
act1 <- mx.symbol.Activation(dp1, name="relu1", act_type="relu")
fc2 <- mx.symbol.FullyConnected(act1, num_hidden=32)
dp2<- mx.symbol.Dropout(fc2,name="dp2", p=0.1)
act2 <- mx.symbol.Activation(dp2, name="relu2", act_type="relu")
fc3 <- mx.symbol.FullyConnected(act2, num_hidden=1)
act3 <- mx.symbol.Activation(fc3, name="relu3", act_type="relu")
lro <- mx.symbol.LinearRegressionOutput(act3)
mx.set.seed(0)
model <- mx.model.FeedForward.create(lro, train.x, train.y,ctx = mx.cpu(), num.round=10000, array.batch.size=100,
learning.rate=0.01, momentum=0.9, eval.metric=mx.metric.rmse)
pred = predict(model, test.x)
pred
test.x
test.y
prs<-{}
acts<-{}
for(i in 1:10){
train.x <- data.matrix(rawdata[c((i+240):(i+440)), c(3,4,5,6,7,8,9,13,14,15,16,17,18,19,20,23,24,26,27,28,29)])
train.y <- rawdata[c((i+240):(i+440)),2]
test.x <- data.matrix(rawdata[(i+441), c(3,4,5,6,7,8,9,13,14,15,16,17,18,19,20,23,24,26,27,28,29)])
test.y <- rawdata[(i+441),2]
data <- mx.symbol.Variable("data")
fc1 <- mx.symbol.FullyConnected(data, num_hidden=64)
dp1<- mx.symbol.Dropout(fc1,name="dp1", p=0.1)
act1 <- mx.symbol.Activation(dp1, name="relu1", act_type="relu")
fc2 <- mx.symbol.FullyConnected(act1, num_hidden=32)
dp2<- mx.symbol.Dropout(fc2,name="dp2", p=0.1)
act2 <- mx.symbol.Activation(dp2, name="relu2", act_type="relu")
fc3 <- mx.symbol.FullyConnected(act2, num_hidden=1)
act3 <- mx.symbol.Activation(fc3, name="relu3", act_type="relu")
lro <- mx.symbol.LinearRegressionOutput(act3)
mx.set.seed(0)
model <- mx.model.FeedForward.create(lro, train.x, train.y,ctx = mx.cpu(), num.round=10000, array.batch.size=100,
learning.rate=0.01, momentum=0.9, eval.metric=mx.metric.rmse)
pred = predict(model, test.x)
prs<- append(prs,pred)
acts<- append(acts,test.y)
}
pred = predict(model, test.x)
test.y
prs
acts
